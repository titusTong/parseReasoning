{"version":3,"file":"parseReasoning.esm.js","sources":["../src/index.js"],"sourcesContent":["/**\n * 解析给定文本中的推理内容\n * 该函数尝试识别文本中关于思考或推理的部分这些部分被特定的标签标记出来\n * 如果提供了自定义标签，则使用这些标签；否则，使用默认标签\n * \n * @param {string} text - 待解析的文本\n * @param {string|string[]} tags - 用于标识推理部分的标签可以是单个标签字符串，也可以是标签字符串数组\n * @returns {Object[]} 解析结果数组，每个元素包含类型（\"text\" 或 \"reasoning\"）和内容\n */\nconst parseReasoning = (text, tags) => {\n  try {\n    const defaultTags = [\"think\", \"reason\", \"reasoning\", \"thought\"];\n    const usedTags = tags ? (Array.isArray(tags) ? tags : [tags]) : defaultTags;\n\n    const result = []\n    const tagPattern = new RegExp(`<(${usedTags.join(\"|\")})>`, \"i\")\n    const closeTagPattern = new RegExp(`</(${usedTags.join(\"|\")})>`, \"i\")\n\n    let currentIndex = 0\n    let isReasoning = false\n\n    while (currentIndex < text.length) {\n      const openTagMatch = text.slice(currentIndex).match(tagPattern)\n      const closeTagMatch = text.slice(currentIndex).match(closeTagPattern)\n\n      if (!isReasoning && openTagMatch) {\n        const beforeText = text.slice(\n          currentIndex,\n          currentIndex + openTagMatch.index\n        )\n        if (beforeText.trim()) {\n          result.push({ type: \"text\", content: beforeText.trim() })\n        }\n\n        isReasoning = true\n        currentIndex += openTagMatch.index + openTagMatch[0].length\n        continue\n      }\n\n      if (isReasoning && closeTagMatch) {\n        const reasoningContent = text.slice(\n          currentIndex,\n          currentIndex + closeTagMatch.index\n        )\n        if (reasoningContent.trim()) {\n          result.push({ type: \"reasoning\", content: reasoningContent.trim() })\n        }\n\n        isReasoning = false\n        currentIndex += closeTagMatch.index + closeTagMatch[0].length\n        continue\n      }\n\n      if (currentIndex < text.length) {\n        const remainingText = text.slice(currentIndex)\n        result.push({\n          type: isReasoning ? \"reasoning\" : \"text\",\n          content: remainingText.trim(),\n          reasoning_running: isReasoning\n        })\n        break\n      }\n    }\n\n    return result\n  } catch (e) {\n    console.error(`Error parsing reasoning: ${e}`)\n    return [\n      {\n        type: \"text\",\n        content: text\n      }\n    ]\n  }\n}\n\nexport default parseReasoning;"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,MAAC,cAAc,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK;AACvC,EAAE,IAAI;AACN,IAAI,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC;AACnE,IAAI,MAAM,QAAQ,GAAG,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW;;AAE/E,IAAI,MAAM,MAAM,GAAG;AACnB,IAAI,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG;AAClE,IAAI,MAAM,eAAe,GAAG,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG;;AAExE,IAAI,IAAI,YAAY,GAAG;AACvB,IAAI,IAAI,WAAW,GAAG;;AAEtB,IAAI,OAAO,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE;AACvC,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,UAAU;AACpE,MAAM,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,eAAe;;AAE1E,MAAM,IAAI,CAAC,WAAW,IAAI,YAAY,EAAE;AACxC,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK;AACrC,UAAU,YAAY;AACtB,UAAU,YAAY,GAAG,YAAY,CAAC;AACtC;AACA,QAAQ,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE;AAC/B,UAAU,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,EAAE;AAClE;;AAEA,QAAQ,WAAW,GAAG;AACtB,QAAQ,YAAY,IAAI,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7D,QAAQ;AACR;;AAEA,MAAM,IAAI,WAAW,IAAI,aAAa,EAAE;AACxC,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK;AAC3C,UAAU,YAAY;AACtB,UAAU,YAAY,GAAG,aAAa,CAAC;AACvC;AACA,QAAQ,IAAI,gBAAgB,CAAC,IAAI,EAAE,EAAE;AACrC,UAAU,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,CAAC,IAAI,EAAE,EAAE;AAC7E;;AAEA,QAAQ,WAAW,GAAG;AACtB,QAAQ,YAAY,IAAI,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAC/D,QAAQ;AACR;;AAEA,MAAM,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE;AACtC,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;AACrD,QAAQ,MAAM,CAAC,IAAI,CAAC;AACpB,UAAU,IAAI,EAAE,WAAW,GAAG,WAAW,GAAG,MAAM;AAClD,UAAU,OAAO,EAAE,aAAa,CAAC,IAAI,EAAE;AACvC,UAAU,iBAAiB,EAAE;AAC7B,SAAS;AACT,QAAQ;AACR;AACA;;AAEA,IAAI,OAAO;AACX,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC;AACjD,IAAI,OAAO;AACX,MAAM;AACN,QAAQ,IAAI,EAAE,MAAM;AACpB,QAAQ,OAAO,EAAE;AACjB;AACA;AACA;AACA;;;;"}